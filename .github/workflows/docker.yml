name: Ant Media Server Options and MongoDB Test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: root
        options: --health-cmd "mongo --eval 'db.runCommand(\"ping\").ok' -u root -p example --quiet" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Build the Docker image
        run: docker build --network=host -t ams-test --build-arg LicenseKey="${{ secrets.ENTERPRISE_LICENSE }}" . -t ams-test .

      - name: Run the Docker container with options
        run: |
          docker run -d --name ams-container -p 5080:5080 ams-test -g true -m cluster -h mongodb://root:root@localhost:27017

      - name: Wait for the container to start
        run: sleep 60  # AMS ve MongoDB'nin başlaması için yeterli süre verin

      - name: Check if options are passed correctly
        run: |
          OPTIONS=$(docker exec ams-container printenv AMS_OPTIONS)
          echo "AMS_OPTIONS: $OPTIONS"
          if [[ "$OPTIONS" == "-g true -m cluster -h mongodb://root:root@localhost:27017" ]]; then
            echo "Options test passed!"
          else
            echo "Options test failed. Expected '-g true -m cluster -h mongodb://root:example@localhost:27017', but got '$OPTIONS'"
            exit 1
          fi

      - name: Check MongoDB Connection 
        run: |
          docker exec ams-container mongo --host localhost --port 27017 -u root -p example --eval "db.adminCommand('ping')"
          if [[ $? -eq 0 ]]; then
            echo "MongoDB connection test passed!"
          else
            echo "MongoDB connection test failed!"
            exit 1
          fi

      - name: Stop and remove the container
        if: always()
        run: docker stop ams-container && docker rm ams-container

name: Dockerfile MongoDB Parametre Testi

on: 
  push:
    branches:
      - main
  pull_request:

jobs:
  test-dockerfile-mongodb:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:8
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build \
            --build-arg LicenseKey="${{ secrets.ENTERPRISE_LICENSE }}" \
            --build-arg InstallMediaPush='true' \
            --build-arg UseSupervisor='false' \
            -t antmedia-test .

      - name: Run Docker Container with MongoDB
        run: |
          docker run --rm \
            --network=host \
            -e "MONGO_URI=mongodb://localhost:27017/testdb" \
            --name antmedia-container antmedia-test /bin/sh -c " \
              echo 'Script Args: $@' > /home/param_log.txt && \
              /usr/local/antmedia/start.sh -m cluster -h \$MONGO_URI && \
              echo 'MongoDB Connected: \$MONGO_URI' > /home/test.txt"

      - name: Verify Start Script Arguments
        run: |
          docker cp antmedia-container:/home/param_log.txt param_log.txt
          cat param_log.txt

          if grep -q '-m cluster' param_log.txt && grep -q "-h mongodb://localhost:27017/testdb" param_log.txt; then
            echo "✅ start.sh doğru parametreleri aldı."
          else
            echo "❌ start.sh parametreleri almadı!" && exit 1
          fi

      - name: Verify MongoDB Test Output
        run: |
          docker cp antmedia-container:/home/test.txt test.txt
          cat test.txt
